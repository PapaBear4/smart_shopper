// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/grocery_store.dart';
import 'models/shopping_item.dart';
import 'models/shopping_list.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4843160077464443892),
      name: 'GroceryStore',
      lastPropertyId: const obx_int.IdUid(5, 8858691880572558394),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8097639316485930552),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8560774994384355071),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8818619943353349853),
            name: 'website',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5899172197649786906),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8858691880572558394),
            name: 'phoneNumber',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 4997435842082196630),
      name: 'ShoppingItem',
      lastPropertyId: const obx_int.IdUid(7, 9092583722736998308),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1695149542950782062),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6359404052085084853),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 20874931826965993),
            name: 'category',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7137229638748703116),
            name: 'quantity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3141370697861114506),
            name: 'unit',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8358550304604749660),
            name: 'isCompleted',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 9092583722736998308),
            name: 'shoppingListId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 9141118425478715926),
            relationTarget: 'ShoppingList')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 9084818011994416483),
            name: 'groceryStores',
            targetId: const obx_int.IdUid(1, 4843160077464443892))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 4792679058667801946),
      name: 'ShoppingList',
      lastPropertyId: const obx_int.IdUid(2, 102620082133135101),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8691350366388863580),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 102620082133135101),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'items', srcEntity: 'ShoppingItem', srcField: 'shoppingList')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 4792679058667801946),
      lastIndexId: const obx_int.IdUid(1, 9141118425478715926),
      lastRelationId: const obx_int.IdUid(1, 9084818011994416483),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    GroceryStore: obx_int.EntityDefinition<GroceryStore>(
        model: _entities[0],
        toOneRelations: (GroceryStore object) => [],
        toManyRelations: (GroceryStore object) => {},
        getId: (GroceryStore object) => object.id,
        setId: (GroceryStore object, int id) {
          object.id = id;
        },
        objectToFB: (GroceryStore object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final websiteOffset =
              object.website == null ? null : fbb.writeString(object.website!);
          final addressOffset =
              object.address == null ? null : fbb.writeString(object.address!);
          final phoneNumberOffset = object.phoneNumber == null
              ? null
              : fbb.writeString(object.phoneNumber!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, websiteOffset);
          fbb.addOffset(3, addressOffset);
          fbb.addOffset(4, phoneNumberOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final websiteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final phoneNumberParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12);
          final object = GroceryStore(
              id: idParam,
              name: nameParam,
              website: websiteParam,
              address: addressParam,
              phoneNumber: phoneNumberParam);

          return object;
        }),
    ShoppingItem: obx_int.EntityDefinition<ShoppingItem>(
        model: _entities[1],
        toOneRelations: (ShoppingItem object) => [object.shoppingList],
        toManyRelations: (ShoppingItem object) => {
              obx_int.RelInfo<ShoppingItem>.toMany(1, object.id):
                  object.groceryStores
            },
        getId: (ShoppingItem object) => object.id,
        setId: (ShoppingItem object, int id) {
          object.id = id;
        },
        objectToFB: (ShoppingItem object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final categoryOffset = fbb.writeString(object.category);
          final unitOffset = fbb.writeString(object.unit);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, categoryOffset);
          fbb.addFloat64(3, object.quantity);
          fbb.addOffset(4, unitOffset);
          fbb.addBool(5, object.isCompleted);
          fbb.addInt64(6, object.shoppingList.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final categoryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final quantityParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final unitParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final isCompletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final object = ShoppingItem(
              id: idParam,
              name: nameParam,
              category: categoryParam,
              quantity: quantityParam,
              unit: unitParam,
              isCompleted: isCompletedParam);
          object.shoppingList.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.shoppingList.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<ShoppingItem>(
              object.groceryStores,
              store,
              obx_int.RelInfo<ShoppingItem>.toMany(1, object.id));
          return object;
        }),
    ShoppingList: obx_int.EntityDefinition<ShoppingList>(
        model: _entities[2],
        toOneRelations: (ShoppingList object) => [],
        toManyRelations: (ShoppingList object) => {
              obx_int.RelInfo<ShoppingItem>.toOneBacklink(7, object.id,
                      (ShoppingItem srcObject) => srcObject.shoppingList):
                  object.items
            },
        getId: (ShoppingList object) => object.id,
        setId: (ShoppingList object, int id) {
          object.id = id;
        },
        objectToFB: (ShoppingList object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = ShoppingList(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<ShoppingList>(
              object.items,
              store,
              obx_int.RelInfo<ShoppingItem>.toOneBacklink(7, object.id,
                  (ShoppingItem srcObject) => srcObject.shoppingList));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [GroceryStore] entity fields to define ObjectBox queries.
class GroceryStore_ {
  /// See [GroceryStore.id].
  static final id =
      obx.QueryIntegerProperty<GroceryStore>(_entities[0].properties[0]);

  /// See [GroceryStore.name].
  static final name =
      obx.QueryStringProperty<GroceryStore>(_entities[0].properties[1]);

  /// See [GroceryStore.website].
  static final website =
      obx.QueryStringProperty<GroceryStore>(_entities[0].properties[2]);

  /// See [GroceryStore.address].
  static final address =
      obx.QueryStringProperty<GroceryStore>(_entities[0].properties[3]);

  /// See [GroceryStore.phoneNumber].
  static final phoneNumber =
      obx.QueryStringProperty<GroceryStore>(_entities[0].properties[4]);
}

/// [ShoppingItem] entity fields to define ObjectBox queries.
class ShoppingItem_ {
  /// See [ShoppingItem.id].
  static final id =
      obx.QueryIntegerProperty<ShoppingItem>(_entities[1].properties[0]);

  /// See [ShoppingItem.name].
  static final name =
      obx.QueryStringProperty<ShoppingItem>(_entities[1].properties[1]);

  /// See [ShoppingItem.category].
  static final category =
      obx.QueryStringProperty<ShoppingItem>(_entities[1].properties[2]);

  /// See [ShoppingItem.quantity].
  static final quantity =
      obx.QueryDoubleProperty<ShoppingItem>(_entities[1].properties[3]);

  /// See [ShoppingItem.unit].
  static final unit =
      obx.QueryStringProperty<ShoppingItem>(_entities[1].properties[4]);

  /// See [ShoppingItem.isCompleted].
  static final isCompleted =
      obx.QueryBooleanProperty<ShoppingItem>(_entities[1].properties[5]);

  /// See [ShoppingItem.shoppingList].
  static final shoppingList =
      obx.QueryRelationToOne<ShoppingItem, ShoppingList>(
          _entities[1].properties[6]);

  /// see [ShoppingItem.groceryStores]
  static final groceryStores =
      obx.QueryRelationToMany<ShoppingItem, GroceryStore>(
          _entities[1].relations[0]);
}

/// [ShoppingList] entity fields to define ObjectBox queries.
class ShoppingList_ {
  /// See [ShoppingList.id].
  static final id =
      obx.QueryIntegerProperty<ShoppingList>(_entities[2].properties[0]);

  /// See [ShoppingList.name].
  static final name =
      obx.QueryStringProperty<ShoppingList>(_entities[2].properties[1]);

  /// see [ShoppingList.items]
  static final items = obx.QueryBacklinkToMany<ShoppingItem, ShoppingList>(
      ShoppingItem_.shoppingList);
}
